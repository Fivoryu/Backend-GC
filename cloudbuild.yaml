# Google Cloud Build configuration for Condominium Management System
steps:
  # Step 1: Run tests
  - name: 'python:3.11.10-slim-bookworm'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y libpq-dev gcc
        pip install -r requirements.txt
        python manage.py test --settings=config.settings
    env:
      - 'SECRET_KEY=test-secret-key'
      - 'DEBUG=True'
      - 'DB_HOST=localhost'
      - 'DB_NAME=test_db'
      - 'DB_USER=postgres'
      - 'DB_PASSWORD=test'
    waitFor: ['-']

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.gcp',
      '-t', 'gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/condominium-api:latest',
      '.'
    ]
    waitFor: ['0']

  # Step 3: Push image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID']
    waitFor: ['1']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/condominium-api:latest']
    waitFor: ['1']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'condominium-api'
      - '--image=gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=DJANGO_SETTINGS_MODULE=config.gcp_settings'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--set-env-vars=GS_BUCKET_NAME=$_GS_BUCKET_NAME'
      - '--set-env-vars=CLOUD_SQL_CONNECTION_NAME=$_CLOUD_SQL_CONNECTION_NAME'
      - '--add-cloudsql-instances=$_CLOUD_SQL_CONNECTION_NAME'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--concurrency=80'
      - '--max-instances=10'
      - '--min-instances=1'
      - '--port=8080'
      - '--timeout=300'
    waitFor: ['2', '3']

  # Step 5: Run database migrations
  - name: 'gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID'
    entrypoint: 'python'
    args: ['manage.py', 'migrate', '--settings=config.gcp_settings']
    env:
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - 'CLOUD_SQL_CONNECTION_NAME=$_CLOUD_SQL_CONNECTION_NAME'
      - 'GS_BUCKET_NAME=$_GS_BUCKET_NAME'
      - 'SECRET_KEY=$_SECRET_KEY'
      - 'DB_NAME=$_DB_NAME'
      - 'DB_USER=$_DB_USER'
      - 'DB_PASSWORD=$_DB_PASSWORD'
    waitFor: ['4']

  # Step 6: Collect static files
  - name: 'gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID'
    entrypoint: 'python'
    args: ['manage.py', 'collectstatic', '--noinput', '--settings=config.gcp_settings']
    env:
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - 'GS_BUCKET_NAME=$_GS_BUCKET_NAME'
      - 'SECRET_KEY=$_SECRET_KEY'
    waitFor: ['5']

# Substitutions for variables
substitutions:
  _REGION: 'us-central1'
  _GS_BUCKET_NAME: '${PROJECT_ID}-static'
  _CLOUD_SQL_CONNECTION_NAME: '${PROJECT_ID}:${_REGION}:condominium-db'
  _SECRET_KEY: 'your-secret-key-here'
  _DB_NAME: 'condominium_db'
  _DB_USER: 'postgres'
  _DB_PASSWORD: 'your-db-password'

# Options
options:
  # Use a faster machine type
  machineType: 'E2_HIGHCPU_8'
  # Enable parallel execution
  substitution_option: 'ALLOW_LOOSE'
  # Increase timeout for long-running builds
  timeout: '1200s'
  # Enable build logging
  logging: 'CLOUD_LOGGING_ONLY'

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/condominium-api:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/condominium-api:latest'

# Trigger configuration (for GitHub integration)
trigger:
  github:
    owner: 'Fivoryu'
    name: 'Backend-GC'
    push:
      branch: '^main$'
  description: 'Deploy Condominium API to Cloud Run on main branch push'
  filename: 'cloudbuild.yaml'