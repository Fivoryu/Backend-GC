version: '3.8'

services:
  db:
    image: postgres:15.8-alpine
    environment:
      POSTGRES_DB: condominium
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_backup.sql:/docker-entrypoint-initdb.d/backup.sql:ro  # Auto-importa en primera ejecución
    ports:
      - "5432:5432"
    networks:
      - condominium_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d condominium"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-for-docker-change-in-production
      - DB_HOST=db
      - DB_NAME=condominium
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - LOAD_INITIAL_DATA=false  # false porque usamos backup o fixtures
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:80
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - condominium_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx optimizado para producción
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
      - ./ssl:/etc/nginx/ssl:ro  # Para certificados SSL (opcional)
    depends_on:
      web:
        condition: service_healthy
    networks:
      - condominium_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  condominium_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16